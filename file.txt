<!DOCTYPE html>
<html>
<head>
<h1 align="center"><a name="tips">Програмування та підтримка веб-застосувань</a></h1>

<nav class="toc">
  <h2 align="center"><a name="zmist">Зміст</a></h2>
  <ul>
    <li><a href="#meta">Мета курсу</a>
    <li><a href="#exec">Завдання курсу</a>
    <li><a href="#prog">Програма курсу</a>
    <li><a href="#11">Предмет курсу</a>
    <li><a href="#12">Огляд Web 2.0</a>
    <li><a href="#13">Інформаційний дизайн</a>
    <li><a href="#14">Проектування сайтів та сервісів</a>
  </ul>
</nav>

<h2 id="meta">Мета курсу</h2>
<p>Метою даного курсу є формування та узагальнення спеціальних знань та навичок студентів з питань створення програм для глобальної мережі Інтернет.
<a href="#zmist">(повернутись до змісту)</a></p>
<h2 id="exec">Завдання курсу</h2>
<ul style="list-style-type:square;">
  <li>Ознайомлення студентів з сучасними тенденціями розвитку сервісів Інтернет;</li>
  <li>Ознайомлення студентів з основними стандартами обміну даними між додатками та сервісами Інтернет;</li>
  <li>Освоєння студентами основних технологічних методів практичного застосування мовних засобів програмування для розробки програмного продукту.</li>
  <a href="#zmist">(повернутись до змісту)</a>
</ul>

<h2 id="prog">Програма курсу</h2>
<h3 id="11">1.1. Предмет курсу</h3>
<p>Визначення веб-програмування. Особливості програмування для WWW. <a href="#zmist">(повернутись до змісту)</a></p>

<h3 id="12">1.2. Огляд Web 2.0</h3>
<p>Основні принципи web2.0: веб як платформа, "довгий хвіст", кооперація.</p>
<p>Способи організаці спільнот. Переваги RSS, постійних посилань на динамічні сторінки, двосторонніх посилань. Спільноти на прикладі LiveJournal. Блоги. Наповнення сайтів користу-вачами на прикладі Wiki. Автоматичне врахування думки користувачів: формула Google Page Rank, розділ "Дивись також". Мережі P2P на прикладі BitTorrent.</p>
<p>Визначення терміну "довгий хвіст", причини уваги до "довгого хвоста". "Довгий хвіст" клієнтів, посередників та сервісів. Способи охоплення "довгого хвоста": підтримка різних стратегій пошуку, персоналізація сайта, якісна інформаційна структура, оптимізація сайтів для пошукових систем, оптимізація розміру та інтерфейсу веб-сторінок. Розповсюджені стратегії пошуку: перелік документів, на які посилається поточний документ; перелік документів, які посилаються на поточний документ; перегляд поточної категорії; перегляд тематичноі підбірки; пошук за іменем автора; пошук за ключовими словами.</p>
<p>Веб як платформа. Програми як сервіси. Характеристика програмного забезпечення для web2.0: синдикація сервісів, проста розширюваність, вічна бета, робота поверх пристроїв. Приклади сервісів.</p>
<p>(детальніше див. <a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%B1_2.0">Web 2.0</a>)</p>
<a href="#zmist">(повернутись до змісту)</a>
<h3 id="13">1.3. Інформаційний дизайн</h3> 
<p> Причини уваги до інформаційного дизайну. Проблеми впорядкування інформації в Інтернет: неоднорідність об'єктів, неоднозначність людської мови, різноманітність аудиторії, не-досвічені користувачі.</p>
<p>Способи класифікації. Точні та неточні класифікатори, їх приклади. Види інформаційних структур: ієрархічна модель даних, фасетна класифікація, реляційна модель даних, мережна можель даних. УДК як приклад фасетної класифікації. Фолксномія, теги, хмари, створення хмар. Переваги та недоліки кожної інформаційної структури. Метод карток.</p>
<p>Інтерфейс додатків. Визначення поняття. Способи підрахунку ефективності інтерфейсів. Принципи проектування інтерфейсів для веб-додатків. Особливості застосування основних елементів керування в веб-додатках: посилання, кнопка, список, прапорець, перемикач, дерево, текстові поля.</p>
<p>Важливість зрозумілих написів та повідомлень. Принципи складання написів.</p>
<p>Вимоги до системи пошуку інформації. Ознаки дружньої до користувача системи пошуку. </p>
<p>(детальніше див. <a href="https://uk.wikipedia.org/wiki/%D0%86%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D1%96%D0%B9%D0%BD%D0%B8%D0%B9_%D0%B4%D0%B8%D0%B7%D0%B0%D0%B9%D0%BD">Інформаційний дизайн</a>)</p>
<a href="#zmist">(повернутись до змісту)</a>
<h3 id="14">1.4. Проектування сайтів та сервісів</h3>
<p> Загальний план проектування. Визначення мети та задач. Персонажі та їх характеристики. Варіанти використання. Сценарії використання. Повсякденні, обов'язкові, виняткові сцена-рії. Класи та об'єкти, інформаційний дизайн структур даних. Стани, особливості станів для сер-вісів Інтернет та сайтів. Дії об'єктів. Взаємодія об'єктів: послідовність та кооперація. Перелік компонентів. Послідовність розгортання та реалізації. Інформаційний дизайн інтерфейса. Призначення мінімального та повного варіантів інтерфейса. Графічний дизайн. Приклад проекта. Шаблони сайтів та їх елементів.</p>
<p>Мета та задачі сервісу. Вимоги до сервісу: максимальна автономність, повнота, наявність документації, відсутність станів. Контракт сервісу. Врахування навантаження на сервер. Прото-кол взаємодії. Питання безпеки: аутентіфікація, авторизація, безпека коммунікації, зберігання посвічень для звернень клієнта до сервісу. Документація: опис WSDL, XSD схеми даних.</p>

<p>(цілком програму курсу можете знайти на сайті <a href="http://sites.znu.edu.ua/webdevelopment/">Програмування та підтримка веб-застосувань</a>)</p>
<a href="#zmist">(повернутись до змісту)</a>
</body>
</html>


